GitHub is a web-based platform and service that provides tools for version control and collaboration on software development projects. It uses the Git version control system to help developers manage and track changes in their code. Here's how GitHub facilitates collaboration and version control:

1) Repository Hosting: 
	GitHub allows users to create repositories to store and manage their source code. These repositories can be public (open to anyone) or private (restricted to specified collaborators).

2) Collaboration: 
	GitHub provides a platform for multiple developers to collaborate on a project. Contributors can make changes to the code and propose these changes through pull requests. This collaborative workflow encourages code review and discussion.

3) Issue Tracking: 
	GitHub offers a built-in issue tracking system, making it easy to manage and prioritize tasks, bug reports, and feature requests within a project.

4) Code Review: 
	Pull requests on GitHub allow for structured code review, where contributors can suggest changes, discuss code improvements, and ensure code quality before merging changes into the main project.

5) Forks: 
	Developers can create forks of a repository to work on their own copies of a project. They can then propose changes back to the original repository through pull requests.

6) Branching: 
	GitHub supports branching, allowing developers to work on different features or bug fixes in parallel and merge their changes when ready.

7) History and Version Control: 
	GitHub maintains a detailed history of all changes made to a project. Users can browse and revert to previous versions of their code.

8) Web-Based Interface: 
	GitHub provides an intuitive web interface for performing many Git actions, making it accessible to developers who may not be familiar with Git commands.

Alternatives to GitHub include:

1) GitLab: Similar to GitHub, GitLab is a web-based platform that offers repository hosting, issue tracking, continuous integration, and more. GitLab can be self-hosted or used as a cloud-based service.

2) Bitbucket: Atlassian's Bitbucket offers both Git and Mercurial repository hosting. It provides features like branching, code review, and issue tracking. It can be integrated with other Atlassian tools like Jira.

3) GitKraken: GitKraken is a Git client that provides version control features and collaboration tools. It integrates with GitHub, GitLab, and Bitbucket.

4) SourceForge: SourceForge is an older platform that offers repository hosting, issue tracking, and collaborative tools for open-source projects.

5) AWS CodeCommit: Amazon Web Services (AWS) provides CodeCommit, a managed source control service that can be integrated into AWS development workflows.

6) Gitea: Gitea is a self-hosted Git service with an interface similar to GitHub. It's lightweight and designed for smaller teams and personal projects.